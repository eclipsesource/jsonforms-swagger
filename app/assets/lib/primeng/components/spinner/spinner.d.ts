import { ElementRef, AfterViewInit, EventEmitter } from '@angular/core';
import { DomHandler } from '../dom/domhandler';
export declare class Spinner implements AfterViewInit {
    private el;
    private domHandler;
    value: number;
    valueChange: EventEmitter<any>;
    onChange: EventEmitter<any>;
    step: number;
    min: number;
    max: number;
    maxlength: number;
    size: number;
    disabled: boolean;
    private hoverUp;
    private activeUp;
    private hoverDown;
    private activeDown;
    private precision;
    private timer;
    constructor(el: ElementRef, domHandler: DomHandler);
    ngAfterViewInit(): void;
    repeat(interval: any, dir: any, input: any): void;
    spin(dir: number, inputElement: any): void;
    toFixed(value: number, precision: number): string;
    onUpButtonMousedown(event: any, input: any): void;
    onUpButtonMouseup(event: any): void;
    onUpButtonMouseenter(event: any): void;
    onUpButtonMouseleave(event: any): void;
    onDownButtonMousedown(event: any, input: any): void;
    onDownButtonMouseup(event: any): void;
    onDownButtonMouseenter(event: any): void;
    onDownButtonMouseleave(event: any): void;
    onInputKeydown(event: any, inputElement: any): void;
    onInput(event: any): void;
    onBlur(inputElement: any): void;
    parseValue(val: string): number;
    handleChange(event: any): void;
    clearTimer(): void;
}
